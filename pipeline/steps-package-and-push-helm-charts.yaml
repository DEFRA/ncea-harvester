steps:

- task: HelmInstaller@1
  displayName: Helm installer
  inputs: 
    helmVersionToInstall: latest

- task: HelmDeploy@0
  displayName: Helm package
  condition: and(succeeded(), eq(variables.isPullRequest, false))
  inputs:
    command: package
    chartPath: $(chartPath)
    chartVersion: $(Build.BuildNumber)
    destination: $(Build.ArtifactStagingDirectory)

- bash: |
    helm push 'ncea-harvester-$(Build.BuildId).tgz' oci://$(ACR.Name).azurecr.io/helm


# - task: HelmDeploy@0
#   displayName: Helm save
#   condition: and(succeeded(), eq(variables.isPullRequest, false))
#   inputs:
#     connectionType: 'Kubernetes Service Connection'
#     kubernetesServiceConnection: $(AKS.ServiceConnection)
#     command: save
#     chartNameForACR: charts/$(ACR.ContainerRepository):$(Build.BuildNumber)
#     chartPathForACR:  $(chartPath)
#     # azureSubscriptionEndpointForACR: 
#     azureResourceGroupForACR: $(ACR.ResourceGroupName)
#     azureContainerRegistry: '$(ACR.Name).azurecr.io'
#   env:
#     HELM_EXPERIMENTAL_OCI: 1

# - task: AzureCLI@1
#   inputs:
#     azureSubscription: $(Arm.ServiceConnection)
#     scriptLocation: inlineScript
#     inlineScript: az acr helm push -n $(acrName) $(Build.ArtifactStagingDirectory)/$(ACR.ContainerRepository)-$(Build.BuildId).tgz