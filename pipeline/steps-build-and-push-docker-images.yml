steps:

- task: Docker@2
  displayName: Login to ACR
  inputs:
    command: login
    containerRegistry: $(ACR.ServiceConnection)

- task: Docker@2
  displayName: 'Build'
  inputs:
    command: build
    containerRegistry: $(ACR.ServiceConnection)
    repository: $(ACR.ContainerRepository)
    dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
    buildContext: '$(Build.SourcesDirectory)'
    tags: |
     latest
     $(Build.BuildId)
    arguments: '--build-arg major=$(BuildMajor) --build-arg minor=$(BuildMinor) --build-arg build=$(Build.BuildId) --build-arg revision=$(BuildRevision)'

- task: Docker@2
  displayName: Push
  inputs:
    command: push
    containerRegistry: $(ACR.ServiceConnection)
    repository: $(ACR.ContainerRepository)
    tags: |
     latest
     $(Build.BuildId)

# - task: Docker@1
#   condition: and(succeeded(), eq(variables['ACR.Deploy'], 'true'))
#   inputs:
#     azureSubscriptionEndpoint: $(AzureSubscription)
#     azureContainerRegistry: $(AzureContainerRegistry)
#     command: build
#     dockerFile: $(System.DefaultWorkingDirectory)/$(dockerFileName)
#     includeLatestTag: false
#     imageName: '$(imageName)'

# - task: Docker@1
#   condition: and(succeeded(), eq(variables['ACR.Deploy'], 'true'))
#   inputs:
#     azureSubscriptionEndpoint: $(AzureSubscription)
#     azureContainerRegistry: $(AzureContainerRegistry)
#     command: 'Push an image'
#     imageName: '$(imageName)'
#     includeSourceTags: false