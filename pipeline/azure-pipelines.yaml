# Starter pipeline

name: $(Date:yyyyMMdd)$(Rev:.r)

trigger:
  branches:
    include:
      - main
      - feature/* 

variables:
  ACR.Name: nceapocsbox
  ACR.ResourceGroupName: NCEA-NW-POC
  ACR.ServiceConnection : acr-AZR-NCE-SND1
  ACR.ContainerRepository: defra/ncea-harvester-service
  ARM.ServiceConnection : AZR-NCE-SND1
  AKS.ServiceConnection : aksServiceConn-AZR-NCE-SND1

stages:
- stage: 'Build'
  displayName: 'Build Harvester Service'
  jobs: 
  - job: 'Build'
    displayName: 'Build job'
    pool:
      vmImage: 'ubuntu-latest'

    variables:
      isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]
      isPullRequest: $[eq(variables['Build.Reason'], 'PullRequest')]
      branchSource: $[replace(variables['Build.SourceBranch'], 'refs/heads/', '')]
      branch: $[replace(variables['branchSource'], '/', '-')]
      ${{ if ne(variables.isMaster, 'true') }}:
        artifactNameSuffix: _$(branch)
      ${{ else }}:
        artifactNameSuffix: ''
      chartPath: 'src/ncea-harvester/ncea-harvester'
      
    steps:
      - template: steps-build-and-test.yaml
      - template: steps-build-and-push-docker-images.yaml
      - template: steps-package-and-push-helm-charts.yaml

- stage: 'sandbox'
  displayName: 'Deploy to Sandbox'
  dependsOn: Build
  condition:  succeeded()
  jobs:
  - deployment: Deploy
    pool:
      vmImage: 'ubuntu-latest'
    environment: sandbox 
    strategy:
      runOnce:
        deploy:
          steps:
            - template: steps-deploy-helm-charts.yaml
              parameters:
                envName: sandbox
                namespace: $(containerRepository)
                releaseName: ncea-harvester-sandbox
                serviceConnection: $(AKS.ServiceConnection)