parameters:
  - name: releaseName
    type: string
  - name: armServiceConnection
    type: string

steps:

- task: DownloadPipelineArtifact@2
  displayName: 'Download Helm Charts'
  condition: succeeded()
  inputs:
    buildType: 'current'
    artifact: charts

- task: ExtractFiles@1
  inputs:
    archiveFilePatterns: '$(Pipeline.Workspace)/charts/*.tgz'
    cleanDestinationFolder: true
    overwriteExistingFiles: true
    destinationFolder: '$(Pipeline.Workspace)/chart'

- task: HelmDeploy@0
  displayName: Helm lint
  condition: succeeded()
  inputs:
    connectionType: Azure Resource Manager
    azureSubscriptionEndpoint: ${{ parameters.armServiceConnection }}
    azureResourceGroup: $(aksResourceGroupName)
    kubernetesCluster : $(aksClusterName)
    command: lint
    arguments: '$(Pipeline.Workspace)/chart/ncea-harvester'

- task: KubeloginInstaller@0
  inputs:
    kubeloginVersion: 'latest'

- task: HelmDeploy@0
  displayName: 'Helm Deploy'
  condition: succeeded()
  inputs:
    connectionType: Azure Resource Manager
    azureSubscriptionEndpoint: ${{ parameters.armServiceConnection }}
    azureResourceGroup: $(aksResourceGroupName)
    kubernetesCluster : $(aksClusterName)
    releaseName: ${{ parameters.releaseName }}
    namespace: $(aksNamespace)
    command: 'upgrade'
    chartType: 'FilePath'
    chartPath: '$(Pipeline.Workspace)/ncea-harvester-$(Build.BuildNumber).tgz'
    valueFile: $(Pipeline.Workspace)/chart/ncea-harvester/values/values.yaml
    overrideValues: |
        image.repository=$(containerRepositoryFullPath)
        image.tag=$(imageTag)
        serviceAccount.name=$(serviceAccountHarvester)
        env.serviceBusHostName=$(serviceBusHostName)
        env.keyVaultUri=$(keyVaultUri)
        env.blobStorageUri=$(blobStorageUri)
        jobs.medin.schedule=$(medinSchedule)
        jobs.jncc.schedule=$(jnccSchedule)
    install: true
    force: true